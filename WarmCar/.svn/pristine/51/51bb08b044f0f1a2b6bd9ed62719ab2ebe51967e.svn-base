import Vuex from 'vuex'
import _ from 'lodash'

//此对象名不可改
import mutations from './mutations'
import actions from './actions'

// 从缓存恢复状态
function getFromCache (state) {
  let copy = _.cloneDeep(state)
  for (let key in copy) {
    let cache = sessionStorage.getItem(key)
    if (cache) {
      let obj = _.pick(JSON.parse(cache), _.keys(copy[key]))
      Object.assign(copy[key], obj)
    }
  }
  return copy
}

const createStore = () => {
  let defaultState = {
    // 用户基本信息
    userInfo: {
      headImg: '',
      nickName: '',
      phone: '',
      sex: '',
      isEnterprise: -1,
      balance: 0,
      deposit: 0,
      couponNum: 0,
      enterpriseBalance: 0
    },
    // 用户账号状态
    userStatus: {
      certificationStatus: '',
      moneyStatus: ''
    },
    // 取车相关信息
    getCar: {
      cityCode: '',
      cityName: '',
      latitude: '',
      longitude: '',
      branchId: '',
      branchName: '',
      branchDetail: {},
      carDetail: {}
    },
    // 还车相关信息
    returnCar: {
      carId: '',
      branchId: '',
      branchName: '',
      detail: {}
    },
    // 用户当前定位信息
    location: {
      cityCode: '',
      cityName: '',
      latitude: '',
      longitude: ''
    },
    // 系统信息
    systemInfo: {
      timePatch: 0
    },
    // 违章详情
    punishDetail: {
      trafficViolationId: 0,
      trafficViolationNo: '',
      carLpn: '',
      trafficViolationTime: 0,
      trafficViolationScore: 0,
      trafficViolationMny: 0,
      trafficViolationDesc: '',
      trafficViolationPlace: '',
      trafficVolationStatus: ''
    },
    wxAuthStatus: false
  }
  // 从缓存恢复状态
  let state = getFromCache(defaultState)
  // 用于clearState清空状态
  state.defaultState = defaultState
  return new Vuex.Store({
    state,
    mutations,
    actions
  })
}

export default createStore
